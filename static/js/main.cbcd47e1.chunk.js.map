{"version":3,"sources":["helpers/getPokemons.js","PokemonContext.jsx","components/SearchInput.jsx","hooks/useForm.js","components/ListScreen.jsx","helpers/getPokemon.js","components/pokemon/PhotoPokemon.jsx","components/pokemon/StatsPokemon.jsx","assets/img/pokeball1.svg","components/pokemon/PokemonScreen.jsx","routes/AppRoute.jsx","Pokedex.jsx","index.js"],"names":["getPokemons","a","fetch","resp","json","results","pokemon","map","poke","name","url","PokemonContext","createContext","SearchInput","useContext","setPokemon","pokename","setPokename","initialState","useState","value","setValue","target","useForm","pokeInput","inputValue","handleInputChange","reset","useEffect","then","filtrarPokemon","filter","includes","onSubmit","e","preventDefault","trim","length","toLowerCase","className","type","onChange","placeholder","autoComplete","ListScreen","to","onClick","window","location","replace","getPokemon","encodeURI","sprites","id","weight","abilities","types","height","stats","tiposPokemon","tipos","pok","img","front_default","habilidad","ability","hp","base_stat","attack","defense","attack_esp","defense_esp","speed","PhotoPokemon","siglePokemon","console","log","src","alt","StatsPokemon","pokeball","scope","PokemonScreen","history","pokemonId","useParams","setSiglePokemon","push","AppRoute","exact","path","component","Pokedex","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbcd47e1.chunk.js","sourcesContent":["\n\n\nexport const getPokemons = async() => {\n    \n    const url = 'https://pokeapi.co/api/v2/pokemon?limit=890';\n    const resp = await fetch(url);\n    const { results } = await resp.json();\n\n    const pokemon = results.map( poke =>{\n        return {\n            name: poke.name,\n            url: poke.url\n        }\n    })\n\n    return pokemon;\n\n}","import { createContext } from 'react';\n\n\nexport const PokemonContext = createContext();\n","import React, { useContext, useEffect } from 'react';\nimport { getPokemons } from '../helpers/getPokemons';\nimport { useForm } from '../hooks/useForm';\nimport { PokemonContext } from '../PokemonContext';\n\n\nexport const SearchInput = () => {\n\n    //useContext\n    const { pokemon, setPokemon, pokename, setPokename } = useContext(PokemonContext)\n\n    //useForm (Custom Hook)\n    const [inputValue, handleInputChange, reset] = useForm({\n        pokeInput:\"\"\n    });\n\n    const { pokeInput } = inputValue;\n\n\n    //Obtengo todos los pokemons de la Api\n    useEffect(() => {\n        \n        getPokemons()\n            .then(setPokemon);\n        \n    }, [])\n\n    \n    //Si el Valor del Input existe filtro los pokemones con ese name\n    //si no existe dejo el mismo array\n    useEffect( () => {\n        \n            if (pokename) {\n                \n                setPokemon(filtrarPokemon(pokename));\n            \n            } else{\n        \n                getPokemons()\n                    .then(setPokemon);\n            }\n            \n    }, [pokename])\n    \n    \n    \n    const filtrarPokemon = (name) => {\n\n        let arrayPokemon =  pokemon.filter( poke => poke.name.includes(name) )\n\n        return arrayPokemon;\n    }\n\n    \n    \n    const hadleSubmit = (e) => {\n\n        e.preventDefault();\n\n        if (pokeInput.trim().length > 0) {\n\n\n            setPokename(pokeInput.toLowerCase());\n\n            reset();\n        }\n\n    }\n\n\n    return (\n\n        <form onSubmit={ hadleSubmit }>\n            <div className=\"input-group input-group-lg\">\n                <input\n                    type=\"search\"\n                    value={ pokeInput }\n                    name=\"pokeInput\"\n                    onChange={ handleInputChange }\n                    className=\"form-control m-2\" \n                    aria-label=\"Large\"\n                    placeholder=\"Buscar...\"\n                    autoComplete=\"off\"\n                />\n            </div>\n        </form>\n    )\n}\n","import { useState } from \"react\"\n\n\n\n//Al usarlo le paso como parametro al useForm un objeto donde voy a almacenarlo que por defecto esta vacio \nexport const useForm = ( initialState={} ) => {\n    \n    //El estado\n    const [value, setValue] = useState(initialState)\n\n    //Reseteo\n    const reset = () =>{\n        setValue(initialState)\n    }\n\n    //Desestruyctura el \"e\" y le saca el target\n    const hadleInputChange = ({ target }) =>{\n\n        //El setValue guarda un nuevo objeto con el objeto anterior + el nuevo\n        setValue({\n            ...value,\n            [target.name]: target.value\n        });\n\n    }\n\n    //Returna el estado y la funcion \n    return [ value, hadleInputChange, reset]\n}\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport { PokemonContext } from '../PokemonContext'\n\nexport const ListScreen = () => {\n    \n    const { pokemon } = useContext(PokemonContext);\n\n    const handleRefesh = () => {\n        window.location.replace('');\n    }\n\n    return (\n        <div className=\"container\">\n            {\n                pokemon.map(poke =>(\n                    <Link \n                        className=\"btn btn-outline-danger\"\n                        to={`./pokemon/${ poke.name }`}\n                        key={ poke.name } \n                    >\n                        { poke.name }\n                    \n                    </Link>\n\n                ))\n            }   \n\n            <button\n                onClick={ handleRefesh } \n                className=\"btn btn-primary m-3\"\n            >\n                Reset\n            </button>\n        </div>\n    )\n}\n","\n//Obtiene un solo pokemon\n\nexport const getPokemon = async (pokemon) => {\n\n\n    const url = `https://pokeapi.co/api/v2/pokemon/${ encodeURI( pokemon ) }`;\n    const resp = await fetch(url);\n    const {sprites, \n            id, \n            name, \n            weight, \n            abilities, \n            types,\n            height, \n            stats} = await resp.json(); \n\n\n    const tiposPokemon = types.map( tipos =>{\n        return \" [ \" + tipos.type.name + \" ]\" \n    } )\n\n\n    const pok = {\n        img: sprites.front_default,\n        id: id,\n        name: name,\n        weight:weight,\n        height:height,\n        habilidad: abilities[0].ability.name,\n        tipos: tiposPokemon,\n        hp: stats[0].base_stat,\n        attack: stats[1].base_stat,\n        defense: stats[2].base_stat,\n        attack_esp: stats[3].base_stat,\n        defense_esp : stats[4].base_stat,\n        speed: stats[5].base_stat\n    }\n\n    return pok;\n}","import React from 'react'\n\nexport const PhotoPokemon = ({ siglePokemon }) => {\n    \n    console.log(siglePokemon)\n    return (\n        <div>\n            <img src={ siglePokemon.img } \n                alt={siglePokemon.name} \n                id='imagenPokemon'>\n            </img>\n        </div>\n    )\n}","import React from 'react';\n\nexport const StatsPokemon = ({ siglePokemon, pokeball }) => {\n    return (\n        <div>\n            <div id='name' className='p-2 rounded-pill '> \n                            <img src={ pokeball } \n                                alt='pokeball' \n                                id='pokeball'\n                                className='float-start'\n                            />\n                            <h3 className='rounded-pill p-2' \n                                id='nombrePoke'>\n                                    { siglePokemon.id } { siglePokemon.name }\n                            </h3>                           \n                        </div>\n                        <h4 className=\"pt-4\" >\n                            Types: { siglePokemon.tipos }\n                        </h4>\n                        <h4>Weight:{ \" \" + siglePokemon.weight / 10} Kg.</h4>\n                        <h4>Height:{ \" \" + siglePokemon.height / 10} M.</h4>\n                        <h4 className=\"pb-4\" >Ability: { \" \" + siglePokemon.habilidad} </h4>\n                        <table className=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Stats Base</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th scope=\"row\">HP</th>\n                                    <td>{siglePokemon.hp}</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">Attack</th>\n                                    <td>{siglePokemon.attack}</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">Defense</th>\n                                    <td>{siglePokemon.defense}</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">Especial Attack</th>\n                                    <td>{siglePokemon.attack_esp}</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">Especial Defense</th>\n                                    <td>{siglePokemon.defense_esp}</td>\n                                </tr>\n                                <tr>\n                                    <th scope=\"row\">Speed</th>\n                                    <td>{siglePokemon.speed}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/pokeball1.df29f606.svg\";","import React, { useContext, useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport { getPokemon } from '../../helpers/getPokemon';\nimport { PokemonContext } from '../../PokemonContext';\nimport { PhotoPokemon } from './PhotoPokemon';\nimport { StatsPokemon } from './StatsPokemon';\nimport pokeball from '../../assets/img/pokeball1.svg';\nimport pokeball1 from '../../assets/img/pokeball.png';\nimport { getPokemons } from '../../helpers/getPokemons';\n\nexport const PokemonScreen = ({ history }) => {\n\n    const { pokemonId } = useParams();\n\n    const { pokename, setPokename, siglePokemon, setSiglePokemon, setPokemon } = useContext(PokemonContext)\n\n    \n\n    const handleReturn = () => {\n        \n        history.push('/');\n\n        getPokemons()\n            .then(setPokemon);\n\n    } \n\n    useEffect(() => {\n        \n        getPokemon(pokename)\n                .then(setSiglePokemon);\n    \n    }, [pokename])\n\n\n    useEffect(() => {\n\n        setPokename(pokemonId)\n\n    }, [pokemonId])\n\n\n    return (\n        <>\n            <div className='container'>\n                <div className='row'>\n                    <div className='col-md-5 col-sm-12'>\n                        <div className='card' id='imgPokedex'>\n                            <div className='card-body' id='fondoPokedex' >\n                                <PhotoPokemon siglePokemon= { siglePokemon } />\n                            </div>\n                        </div>\n                        <button \n                            className=\"btn btn-outline-danger\"\n                            onClick={ handleReturn }        \n                        >\n                            Return\n                        </button>\n                    </div>\n                    <div className='col-md-7 col-sm-12' >\n                        <StatsPokemon siglePokemon= { siglePokemon } \n                            pokeball={ pokeball } \n                        />    \n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n  } from \"react-router-dom\";\nimport { SearchInput } from '../components/SearchInput';\nimport { ListScreen } from '../components/ListScreen'\nimport { PokemonScreen } from '../components/pokemon/PokemonScreen';\n  \n\nexport const AppRoute = () => {\n    return (\n        <Router>\n            <div>\n                <SearchInput/>\n                \n                <Switch>\n                    <Route exact path=\"/pokemon\" component={ PokemonScreen }/>\n                    <Route exact path=\"/pokemon/:pokemonId\" component={ PokemonScreen } />\n                    <Route exact path=\"/\" component={ ListScreen } />\n                \n                    <Redirect  to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n            \n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { AppRoute } from './routes/AppRoute';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { PokemonContext } from './PokemonContext';\nimport { getPokemons } from './helpers/getPokemons';\nimport './index.css';\n\nexport const Pokedex = () => {\n    \n    const [pokemon, setPokemon] = useState([]);\n\n    const [pokename, setPokename] = useState(1);\n\n    const [siglePokemon, setSiglePokemon] = useState({})\n\n    useEffect(() => {\n        \n        getPokemons()\n            .then(setPokemon);\n\n    }, []);\n    \n    return (\n        <PokemonContext.Provider value={{ pokemon, setPokemon, pokename, setPokename, siglePokemon, setSiglePokemon }} >\n             \n            <AppRoute/>\n\n        </PokemonContext.Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Pokedex } from './Pokedex';\n\nReactDOM.render(\n\n    <Pokedex/>, document.getElementById('root')\n);\n"],"sourceRoot":""}